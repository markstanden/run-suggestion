name: Azure Static Web Apps CI/CD

on:
  workflow_call:
    outputs:
      deploy_url:
        description: 'The URL of the deployed Static Web App'
        value: ${{ jobs.build_and_deploy_job.outputs.deploy_url }}
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened, closed ]
    branches:
      - main

jobs:
  build_and_deploy_job:
    runs-on: ubuntu-latest
    concurrency:
      group: swa-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    env:
      DOTNET_NOLOGO: 'true'
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: '1'
    if: |
      github.event_name == 'push' ||
      github.event_name == 'workflow_call' ||
      (github.event_name == 'pull_request' && github.event.action != 'closed')
    name: Build and Deploy Job
    outputs:
      deploy_url: ${{ steps.deploy_swa.outputs.static_web_app_url }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', 'global.json', 'NuGet.config') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: Restore .NET solution dependencies
        run: |
          dotnet restore src/Web/Web.csproj
          dotnet restore src/Api/Api.csproj

      - name: Build & publish Blazor WASM frontend project
        run: dotnet publish src/Web/Web.csproj -c Release --no-restore -o build/web

      - name: Build & publish Azure Function API (isolated worker)
        run: dotnet publish src/Api/Api.csproj -c Release --no-restore -o build/api

      - name: Verify published artifacts exist
        run: |
          set -euxo pipefail
          test -f build/web/wwwroot/index.html
          test -f build/api/host.json

      - name: Deploy built artifacts to Azure Static Web App resource
        id: deploy_swa
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_AGREEABLE_RIVER_007F2F303 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "build/web/wwwroot"
          api_location: "build/api"
          output_location: ""
          skip_app_build: true
          skip_api_build: true
          config_file_location: "."

      - name: Output site URLs
        run: |
          echo "Frontend URL: ${{ steps.deploy_swa.outputs.static_web_app_url }}"
          echo "API healthcheck URL: ${{ steps.deploy_swa.outputs.static_web_app_url }}/api/healthcheck"

      - name: Test API healthcheck endpoint
        run: |
          set -euxo pipefail
          HEALTHCHECK_URL="${{ steps.deploy_swa.outputs.static_web_app_url }}/api/healthcheck"
          echo "Testing healthcheck endpoint: $HEALTHCHECK_URL"
          curl -f --max-time 30 --retry 3 --retry-delay 30 "$HEALTHCHECK_URL"
          echo "Healthcheck endpoint is responding"

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && !github.event.pull_request.head.repo.fork
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: close_pull_request
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_AGREEABLE_RIVER_007F2F303 }}
          action: "close"
          app_location: ''
